// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	domain "github.com/zenoleg/shortener/internal/domain"
)

// idGenerator is an autogenerated mock type for the idGenerator type
type idGenerator struct {
	mock.Mock
}

// Generate provides a mock function with given fields: originalURL
func (_m *idGenerator) Generate(originalURL domain.URL) domain.ID {
	ret := _m.Called(originalURL)

	if len(ret) == 0 {
		panic("no return value specified for Generate")
	}

	var r0 domain.ID
	if rf, ok := ret.Get(0).(func(domain.URL) domain.ID); ok {
		r0 = rf(originalURL)
	} else {
		r0 = ret.Get(0).(domain.ID)
	}

	return r0
}

// newIdGenerator creates a new instance of idGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newIdGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *idGenerator {
	mock := &idGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
